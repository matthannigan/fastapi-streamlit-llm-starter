# AI Model Configuration
GEMINI_API_KEY=your_gemini_api_key_here
AI_MODEL=gemini-2.0-flash-exp
AI_TEMPERATURE=0.7

# API Configuration
BACKEND_HOST=0.0.0.0
BACKEND_PORT=8000
FRONTEND_PORT=8501

# Authentication
API_KEY=your_secure_api_key_here
ADDITIONAL_API_KEYS=key1,key2,key3

# Development Settings
DEBUG=true
LOG_LEVEL=INFO

# CORS Settings
ALLOWED_ORIGINS=["http://localhost:8501"]

# Redis Configuration
REDIS_URL=redis://redis:6379

# Batch Processing
MAX_BATCH_REQUESTS_PER_CALL=50
BATCH_AI_CONCURRENCY_LIMIT=5

# === RESILIENCE CONFIGURATION ===

# Global Resilience Settings
RESILIENCE_ENABLED=true
CIRCUIT_BREAKER_ENABLED=true
RETRY_ENABLED=true

# Default strategy for all operations (aggressive, balanced, conservative, critical)
DEFAULT_RESILIENCE_STRATEGY=balanced

# Circuit Breaker Configuration
CIRCUIT_BREAKER_FAILURE_THRESHOLD=5
CIRCUIT_BREAKER_RECOVERY_TIMEOUT=60

# Retry Configuration
RETRY_MAX_ATTEMPTS=3
RETRY_MAX_DELAY=30
RETRY_EXPONENTIAL_MULTIPLIER=1.0
RETRY_EXPONENTIAL_MIN=2.0
RETRY_EXPONENTIAL_MAX=10.0
RETRY_JITTER_ENABLED=true
RETRY_JITTER_MAX=2.0

# Operation-Specific Resilience Strategies
# Options: aggressive, balanced, conservative, critical

# Text summarization (balanced for general use)
SUMMARIZE_RESILIENCE_STRATEGY=balanced

# Sentiment analysis (aggressive for quick feedback)
SENTIMENT_RESILIENCE_STRATEGY=aggressive

# Key points extraction (balanced for moderate complexity)
KEY_POINTS_RESILIENCE_STRATEGY=balanced

# Question generation (balanced for creative tasks)
QUESTIONS_RESILIENCE_STRATEGY=balanced

# Question answering (conservative for accuracy)
QA_RESILIENCE_STRATEGY=conservative

# Monitoring Configuration
RESILIENCE_METRICS_ENABLED=true
RESILIENCE_HEALTH_CHECK_ENABLED=true

# === RESILIENCE STRATEGY EXPLANATIONS ===
#
# AGGRESSIVE:
# - Fast retries (2 attempts max)
# - Short delays (1-5 seconds)
# - Quick circuit breaker (3 failures)
# - Best for: Real-time operations, quick feedback
#
# BALANCED (RECOMMENDED):
# - Moderate retries (3 attempts)
# - Standard delays (2-10 seconds)
# - Standard circuit breaker (5 failures)
# - Best for: Most operations, general use
#
# CONSERVATIVE:
# - More retries (5 attempts)
# - Longer delays (4-30 seconds)
# - Patient circuit breaker (8 failures)
# - Best for: Complex operations, accuracy-critical tasks
#
# CRITICAL:
# - Maximum retries (7 attempts)
# - Extended delays (3-60 seconds)
# - Very patient circuit breaker (10 failures)
# - Best for: Mission-critical operations, high-value requests

# Maximum length for input sanitization (used by both backend and frontend)
INPUT_MAX_LENGTH=10000
