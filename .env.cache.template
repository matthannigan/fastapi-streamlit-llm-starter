# Phase 4 Cache Configuration Template - Preset-Based System
# Copy this file to .env and customize for your environment
# 
# ‚ú® NEW: Cache configuration simplified from 28+ variables to preset-based approach
# Choose a preset below and customize only what you need to override

# ============================================================================
# üéØ CACHE PRESET SELECTION (Primary Configuration)
# ============================================================================

# Select your cache preset (replaces most individual CACHE_* variables)
CACHE_PRESET=development

# Available presets:
#   disabled        - Cache disabled, memory-only fallback (minimal resources)
#   simple          - Basic cache suitable for most use cases (balanced performance)
#   development     - Fast-feedback config for development (short TTLs, debug logging)
#   production      - High-performance config for production (long TTLs, optimized)
#   ai-development  - AI-optimized development (AI features + development settings)
#   ai-production   - AI-optimized production (AI features + production performance)

# ============================================================================
# üîß ESSENTIAL OVERRIDES (Only customize if different from preset defaults)
# ============================================================================

# Redis connection (most common override)
CACHE_REDIS_URL=redis://localhost:6379
# For TLS: CACHE_REDIS_URL=rediss://your-secure-redis-host:6380

# AI features toggle (only needed if different from preset)
ENABLE_AI_CACHE=true

# General application Redis (kept for resilience patterns and backward compatibility)
REDIS_URL=redis://localhost:6379

# Test Redis (isolated database for tests)
TEST_REDIS_URL=redis://localhost:6379/15

# ============================================================================
# üîí SECURITY CONFIGURATION (Optional - for production environments)
# ============================================================================

# Redis authentication (uncomment if your Redis requires authentication)
# CACHE_REDIS_PASSWORD=your_secure_redis_password

# TLS Configuration for secure connections (uncomment for production)
# CACHE_USE_TLS=true
# CACHE_TLS_CERT_PATH=/path/to/client.crt
# CACHE_TLS_KEY_PATH=/path/to/client.key

# ============================================================================
# üõ†Ô∏è ADVANCED CUSTOMIZATION (Optional - JSON-based overrides)
# ============================================================================

# Custom configuration overrides (only use if preset doesn't meet your needs)
# This allows fine-tuning specific settings without changing the preset
# CACHE_CUSTOM_CONFIG='{"default_ttl": 2400, "max_connections": 15, "compression_level": 8}'

# Example custom configurations:
# Fast development: CACHE_CUSTOM_CONFIG='{"default_ttl": 300, "connection_timeout": 1}'
# High performance: CACHE_CUSTOM_CONFIG='{"max_connections": 50, "compression_level": 9}'
# AI tuning: CACHE_CUSTOM_CONFIG='{"text_hash_threshold": 500, "operation_ttls": {"summarize": 7200}}'

# ============================================================================
# üè• HEALTH CHECK CONFIGURATION (Optional)
# ============================================================================

# Health check settings (leave defaults for most cases)
# HEALTH_CHECK_CACHE_TIMEOUT_MS=3000     # Cache health check timeout
# HEALTH_CHECK_RETRY_COUNT=2             # Number of retries for health checks

# ============================================================================
# üê≥ DOCKER COMPOSE VARIABLES (Used by docker-compose.yml)
# ============================================================================

# Port mappings for Docker development
REDIS_PORT=6379                          # Redis port mapping
BACKEND_PORT=8000                        # Backend port mapping  
FRONTEND_PORT=8501                       # Frontend port mapping

# ============================================================================
# üéØ PRESET DETAILS (For reference - handled automatically by code)
# ============================================================================

# DISABLED PRESET: Cache completely disabled
# - Memory-only fallback, minimal resources
# - Use for: Testing without cache, minimal deployments

# SIMPLE PRESET: Basic balanced configuration  
# - Default TTL: 3600s (1 hour), Memory cache: 100, Compression: level 6
# - Use for: General web applications, balanced performance

# DEVELOPMENT PRESET: Fast-feedback development
# - Default TTL: 600s (10 min), Memory cache: 50, Compression: level 3  
# - Debug logging, fast timeouts, quick development cycles
# - Use for: Local development, fast feedback loops

# PRODUCTION PRESET: High-performance production
# - Default TTL: 7200s (2 hours), Memory cache: 500, Compression: level 9
# - Optimized for performance, extended TTLs, aggressive compression
# - Use for: Production workloads, high-traffic applications

# AI-DEVELOPMENT PRESET: AI + development settings
# - All development settings + AI features enabled
# - Text hashing: 500 chars, operation-specific TTLs, smart promotion
# - Use for: AI application development, LLM integration testing

# AI-PRODUCTION PRESET: AI + production performance  
# - All production settings + optimized AI configurations
# - Text hashing: 1000 chars, extended AI operation TTLs
# - Use for: Production AI applications, LLM-powered services

# ============================================================================
# üöÄ QUICK SETUP EXAMPLES
# ============================================================================

# Simple Web App (3 variables):
# CACHE_PRESET=simple
# CACHE_REDIS_URL=redis://localhost:6379
# ENABLE_AI_CACHE=false

# AI Development (3 variables):
# CACHE_PRESET=ai-development  
# CACHE_REDIS_URL=redis://localhost:6379
# ENABLE_AI_CACHE=true

# High-Performance Production (4 variables):
# CACHE_PRESET=production
# CACHE_REDIS_URL=redis://cache-redis:6379
# ENABLE_AI_CACHE=true
# CACHE_CUSTOM_CONFIG='{"max_connections": 50}'

# ============================================================================
# üìä MIGRATION COMPARISON (Old vs New)
# ============================================================================

# OLD APPROACH (28+ variables):
# CACHE_REDIS_URL, CACHE_DEFAULT_TTL, CACHE_MEMORY_CACHE_SIZE, CACHE_COMPRESSION_THRESHOLD,
# CACHE_COMPRESSION_LEVEL, CACHE_TEXT_HASH_THRESHOLD, CACHE_HASH_ALGORITHM,
# CACHE_MAX_TEXT_LENGTH, CACHE_ENABLE_SMART_PROMOTION, CACHE_OPERATION_TTLS,
# CACHE_TEXT_SIZE_TIERS, CACHE_USE_TLS, CACHE_MAX_CONNECTIONS, CACHE_CONNECTION_TIMEOUT,
# ... plus 14+ more security and performance variables

# NEW APPROACH (1-4 variables):
# CACHE_PRESET=development
# CACHE_REDIS_URL=redis://localhost:6379  
# ENABLE_AI_CACHE=true
# Optional: CACHE_CUSTOM_CONFIG='{"key": "value"}'

# ============================================================================
# üí° GETTING HELP
# ============================================================================

# List all available presets:
# make list-cache-presets

# Show detailed preset configuration:  
# make show-cache-preset PRESET=development

# Validate your configuration:
# make validate-cache-config

# Get preset recommendation:
# make recommend-cache-preset ENV=staging

# Migrate from legacy configuration:
# make migrate-cache-config